import{_ as a,c as t,o as i,ag as o}from"./chunks/framework.DTpsuxmX.js";const m=JSON.parse('{"title":"Targeting","description":"","frontmatter":{"title":"Targeting","sidebar_position":2},"headers":[],"relativePath":"minecraft/default-components/target.md","filePath":"minecraft/default-components/target.md"}'),r={name:"minecraft/default-components/target.md"};function d(s,e,l,n,c,h){return i(),t("div",null,e[0]||(e[0]=[o('<h1 id="tags-wildcards-and-custom-targets" tabindex="-1">Tags, wildcards and custom targets <a class="header-anchor" href="#tags-wildcards-and-custom-targets" aria-label="Permalink to &quot;Tags, wildcards and custom targets&quot;">​</a></h1><div class="info markdown-alert"><p class="markdown-alert-title"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-message-square-warning"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path><path d="M12 7v2"></path><path d="M12 13h.01"></path></svg> INFO</p><p>The <code>target</code> field is optional.</p></div><p>The <code>target</code> field is a powerful option. By default the mod uses the folder path and file name to choose what item to modify, but that can be changed using the <code>target</code> field.</p><p>The field takes identifiers, tags and wildcards. Identifiers are simple, you can find them at the bottom of advanced tooltips. Tags can be found when typing <code>#</code> in the creative search tab, or you can find them on the <a href="https://minecraft.wiki/w/Item_tag_(Java_Edition)" target="_blank" rel="noreferrer">wiki</a></p><h2 id="wildcards" tabindex="-1">Wildcards <a class="header-anchor" href="#wildcards" aria-label="Permalink to &quot;Wildcards&quot;">​</a></h2><div class="warning markdown-alert"><p class="markdown-alert-title"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-triangle-alert"><path d="m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3"></path><path d="M12 9v4"></path><path d="M12 17h.01"></path></svg> WARNING</p><p>Wildcards are currently experimental and may change in the future</p></div><p>Wildcards are a custom system, with the structure <code>namespace:*</code>. When a wildcard is used, all items under the given namespace will have the given component modifications.<br> To apply modifications to all items in the game use the special wildcard <code>*</code>.</p><h2 id="application-order" tabindex="-1">Application order <a class="header-anchor" href="#application-order" aria-label="Permalink to &quot;Application order&quot;">​</a></h2><p>The mod sorts the modifications on the following order:</p><ul><li>All modifications are first sorted by alphabetical order</li><li>After they are sorted by target type <ul><li>Wildcards have higher sorting value, applying first</li><li>Tags and items are positioned right after, applying after wildcards</li><li>Files without the target field are applied last</li></ul></li></ul><p>The order of application allows you to override components, for example, make all logs able to mine stone, and oak logs specifically able to mine obsidian A newer application has the power of overriding changes of past ones, so components on files without <code>target</code> have higher priority than the ones from wildcards</p>',11)]))}const g=a(r,[["render",d]]);export{m as __pageData,g as default};
